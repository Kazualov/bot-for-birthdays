from aiogram import Router, F
from aiogram.types import FSInputFile
from aiogram.types import Message
from aiogram.filters import CommandStart
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from random import randint

router = Router()

bullshit = ["–û–π –∫–∞–∫–∞—è —Ç—ã –≥–ª—É–ø–∞—è.", "–¢—ã –≤–æ–æ–±—â–µ —É–º–µ–µ—à—å –≥–æ–ª–æ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è?", "–¢—ã —É–≤–µ—Ä–µ–Ω–Ω–∞, —á—Ç–æ —Ç–µ–±–µ –≤–æ–æ–±—â–µ —ç—Ç–æ –Ω–∞–¥–æ?",
            "–≠—Ç–æ –¥–∞–∂–µ –∂–∞–ª–∫–æ.", "–î–∞ —É –º–µ–Ω—è –º–∞—Ç—å –ª—É—á—à–µ —Ä–µ—à–∞–µ—Ç, —á–µ–º —Ç—ã.", "–ó–Ω–∞–π —Å–≤–æ—ë –º–µ—Å—Ç–æ!", "–ö–∞–∫–æ–π –æ—Ç —Ç–µ–±—è –ø—Ä–æ–∫?"
            "–ü—Ä–æ—Å—Ç–æ –≤—Å—Ç–∞–Ω—å —É–∂–µ –Ω–∞ –∫–æ–ª–µ–Ω–∏ –∏ —Å–¥–∞–π—Å—è!", "–ú–∏—Ä—Å–∫–∞—è –ø—ã–ª—å!", "...–°–º–µ—à–Ω–æ.", "–ò —ç—Ç–æ –≤—Å—ë?",
            "–ù–∞–¥–µ—è–ª—Å—è, —á—Ç–æ —Ç—ã –Ω–µ –±—É–¥–µ—à—å –æ—Ç–≤–ª–µ–∫–∞—Ç—å –º–µ–Ω—è –ø–æ –ø—É—Å—Ç—è–∫–∞–º."]

import asyncio


async def send_with_typing(message, text: str, delay: float = 2.0):
    await message.bot.send_chat_action(message.chat.id, action="typing")
    await asyncio.sleep(delay)
    await message.answer(text)


# ---- –°–æ—Å—Ç–æ—è–Ω–∏—è ----
class Quest(StatesGroup):
    taskE = State()
    task0 = State()
    task1 = State()
    task2 = State()
    task3 = State()
    task4 = State()
    task5 = State()
    finish = State()


@router.message(CommandStart())
async def cmd_start(message: Message, state=FSMContext):
    await send_with_typing(message, "‚Ä¶–ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ.\n"
                                    "–¢—ã –¥–æ–≥–∞–¥–∞–ª–∞—Å—å –æ—Ç–∫—Ä—ã—Ç—å —ç—Ç—É –∂–∞–ª–∫—É—é –∫–æ—Ä–æ–±–∫—É –∏ –ø—Ä–∏—à–ª–∞ —Å—é–¥–∞.\n"
                                    "–ù–µ—É–∂–µ–ª–∏ —Ç—ã –¥—É–º–∞–ª–∞, —á—Ç–æ —Ç–≤–æ–π –ø—Ä–∞–∑–¥–Ω–∏–∫ –ø—Ä–æ–π–¥—ë—Ç —Å–ø–æ–∫–æ–π–Ω–æ?\n"
                                    "–Ø –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –∏—Å–ø—ã—Ç–∞–Ω–∏—è ‚Äî –∏ –µ—Å–ª–∏ —Å–º–æ–∂–µ—à—å –ø—Ä–æ–π—Ç–∏ –∏—Ö, —Ç–æ–≥–¥–∞, "
                                    "–º–æ–∂–µ—Ç –±—ã—Ç—å‚Ä¶ —è –ø—Ä–∏–∑–Ω–∞—é —Ç–≤–æ—é —Å–æ–æ–±—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å.\n\n"
                                    "–ü—Ä–∏–º–µ—Ä —á—Ç–æ–± –ø–æ–Ω–∏–º–∞–ª–∞: `flag<task0_flag>`\n\n"
                                    "–ú–æ–∂–Ω–æ —É–∂–µ —Ö–æ—Ç—å —á—Ç–æ —Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å ‚òùÔ∏èüòí ")
    await state.set_state(Quest.taskE)


@router.message(F.text.in_(["–∂–æ–ø–∞", "–ñ–æ–ø–∞", "–ñ–û–ü–ê"]))
async def jopa(message: Message):
    text = "–ñ–û" + "O" * randint(0, 5) + "–ü" + "A" * randint(1, 10)
    await message.answer(text)


# ---- TASK E ----
@router.message(Quest.taskE)
async def taskE(message: Message, state: FSMContext):
    text = ("–Ø ‚Äî –∫—É–∫–ª–∞, –ª–∏—à—ë–Ω–Ω–∞—è —Å–µ—Ä–¥—Ü–∞, –Ω–æ —Å—Ç—Ä–µ–º—è—â–∞—è—Å—è —Å—Ç–∞—Ç—å –±–æ–≥–æ–º.\n"
            "–ú–æ—ë –ø—Ä–æ—à–ª–æ–µ –±—ã–ª–æ —Å—Ç—ë—Ä—Ç–æ –∏–∑ –º–∏—Ä–æ–≤–æ–≥–æ –¥—Ä–µ–≤–∞, –Ω–æ –æ—Å—Ç–∞–ª–æ—Å—å –≤ –Ω—É–ª—è—Ö –∏ –µ–¥–∏–Ω–∏—Ü–∞—Ö.\n\n"
            "`01010011 01001011 01010010 01001101 01000011 01001000`\n\n"
            "–†–∞—Å—à–∏—Ñ—Ä—É–π –º–æ—ë –∏–º—è, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–ª—é—á.\n")
    if message.text.strip().lower() == "flag<task0_flag>":
        await send_with_typing(message, text)
        await state.set_state(Quest.task0)
    else:
        await send_with_typing(bullshit[randint(0, len(bullshit) - 1)])


# ---- TASK 0 ----
@router.message(Quest.task0)
async def task0(message: Message, state: FSMContext):
    if message.text.strip().lower() == "flag<scrmch>":
        await send_with_typing(message,
                               "–•–º. –¢–∞–∫ —Ç—ã –≤—Å—ë –∂–µ –¥–æ–≥–∞–¥–∞–ª–∞—Å—å‚Ä¶ –¢—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—Å–µ–∫—Ä–µ—Ç–∏–ª–∞ –º–µ–Ω—è.\n\n"
                               "–ù–æ —ç—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ. –û–¥–∏–Ω –∏–∑ –º–æ–∏—Ö —Å–ª—É–≥ –∂–¥–µ—Ç —Ç–µ–±—è –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã—Ö.\n"
                               "–ù–µ —Ç–∞–∫–∏—Ö –∫–∞–∫ —Ç—ã, —Ä–∞–∑—É–º–µ–µ—Ç—Å—è.\n"
                               "–ü–µ—Ä–≤–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ:\n"
                               "–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–∏—Å—å–º–æ. –•–æ—á—É —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –æ–Ω–æ –¥–æ—à–ª–æ –≤ —Ü–µ–ª–æ—Å—Ç–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç–∏.\n"
                               "–í–≤–µ–¥–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –º–Ω–æ–π —Å–æ–æ–±—â–µ–Ω–∏–µ"
                               )
        await state.set_state(Quest.task1)
    else:
        await send_with_typing(message, bullshit[randint(0, len(bullshit) - 1)])


# ---- TASK 1 ----
@router.message(Quest.task1)
async def task1(message: Message, state: FSMContext):
    # –æ–∂–∏–¥–∞–µ–º—ã–π –æ—Ç–≤–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä ¬´HAPPYBIRTHDAY¬ª)
    if message.text.strip().lower() == "flag<happybirthday>":
        await send_with_typing(message,
                               "–í–∏–∂—É, —á—Ç–æ –±–∞–∑–æ–≤—ã–µ —à–∏—Ñ—Ä—ã –¥–ª—è —Ç–µ–±—è –Ω–µ –ø—Ä–æ–±–ª–µ–º–∞. –ù–æ –Ω–µ –æ–±–æ–ª—å—â–∞–π—Å—è.\n\n"
                               "–¢–µ–ø–µ—Ä—å —Ç–∞—â–∏ —Å–≤–æ—ë —Ç–µ–ª–æ –∫–∞–∫ –º–æ–∂–Ω–æ –≤—ã—à–µ –∫ –Ω–µ–±–µ—Å–∞–º.\n"
                               "–í—Ç–æ—Ä–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ:\n"
                               "–Ø —Å—ã–≥—Ä–∞–ª –º–µ–ª–æ–¥–∏—é –Ω–∞ –Ω–µ–±–µ—Å–Ω–æ–π –∞—Ä—Ñ–µ. –ö–∞–∂–¥–∞—è –Ω–æ—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±—É–∫–≤–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ.\n"
                               "–°–æ–±–µ—Ä–∏ –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤ –∏ –ø–æ–ª—É—á–∏ —Å–ª–æ–≤–æ. –í–≤–µ–¥–∏ –µ–≥–æ.\n\n"
                               "–≠—Ç–æ –º–æ–∂–µ—Ç —Ç–µ–±–µ –ø–æ–º–æ—á—å.\n"
                               "https://specy.github.io/genshinMusic"
                               )
        voice = FSInputFile("arpha.ogg")
        await message.answer_voice(voice)
        await state.set_state(Quest.task2)
    else:
        await send_with_typing(message, "–ù–µ–≤–µ—Ä–Ω–æ. –¢—ã —É–≤–µ—Ä–µ–Ω–∞, —á—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–Ω—è–ª–∞ –∫–ª—é—á?")


# ---- TASK 2 ----
@router.message(Quest.task2)
async def task2(message: Message, state: FSMContext):
    if message.text.strip().lower() == "flag<trash>":
        await send_with_typing(message,
                               "–¢–∞–∫-—Ç–∞–∫‚Ä¶ —É —Ç–µ–±—è –ø–æ–ª—É—á–∞–µ—Ç—Å—è –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º —è –æ–∂–∏–¥–∞–ª.\n\n"
                               "–ö–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç—Å—è, —á–µ–º –≤—ã—à–µ –∑–∞–±–µ—Ä–µ—à—å—Å—è, —Ç–µ–º –¥–æ–ª—å—à–µ –ø–∞–¥–∞—Ç—å. –ü–æ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –ø–æ–¥ –∑–µ–º–ª—é.\n"
                               "–¢—Ä–µ—Ç—å–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ:\n"
                               "–ü–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ —Å–∏–ª—É—ç—Ç—ã –∏ –Ω–∞–∑–æ–≤–∏ –≥–µ—Ä–æ–µ–≤. –ò–∑ –∏–º–µ–Ω –≤–æ–∑—å–º–∏ –ø–µ—Ä–≤—É—é –±—É–∫–≤—É ‚Äî —ç—Ç–æ –∏ –±—É–¥–µ—Ç –æ—Ç–≤–µ—Ç."
                               )
        await state.set_state(Quest.task3)
    else:
        await send_with_typing(message, bullshit[randint(0, len(bullshit) - 1)])


# ---- TASK 3 ----
@router.message(Quest.task3)
async def task3(message: Message, state: FSMContext):
    if message.text.strip().lower() == "flag<jopa>":
        await send_with_typing(message,
                               "–í–µ—Ä–Ω–æ. –¢—ã –Ω–∞—á–∏–Ω–∞–µ—à—å —É–∑–Ω–∞–≤–∞—Ç—å –¢–µ–π–≤–∞—Ç –Ω–µ —Ö—É–∂–µ –º–µ–Ω—è.\n\n"
                               "–¢–µ–ø–µ—Ä—å –∏–¥–∏ —Ç—É–¥–∞, –≥–¥–µ –≤–∞—Ä—è—Ç –±–æ–¥—Ä—è—â–∏–µ –∑–µ–ª—å—è. –ó–∞–≤–µ–¥–µ–Ω–∏–µ, —á—Ç–æ –∑–∞ —Å—Ç–æ—Ä–æ–∂–µ–≤–æ–π –±–∞—à–Ω–µ–π\n"
                               "–ß–µ—Ç–≤—ë—Ä—Ç–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ:\n"
                               "–û—Ç—Å–∫–∞–Ω–∏—Ä—É–π QR-–∫–æ–¥. –ù–∞–π–¥–∏ —Å–ª–æ–≤–æ –∏ –≤–≤–µ–¥–∏ –µ–≥–æ –∑–¥–µ—Å—å."
                               )
        await state.set_state(Quest.task4)
    else:
        await send_with_typing(message, "–•–∞. –†–∞–∑—É–π –≥–ª–∞–∑–∞." + bullshit[randint(0, len(bullshit) - 1)])


# ---- TASK 4 ----
@router.message(Quest.task4)
async def task4(message: Message, state: FSMContext):
    if message.text.strip().lower() == "flag<–∫–∞–Ω–æ—ç>":
        await send_with_typing(message,
                               "–¢—ã –∏ –∑–¥–µ—Å—å —Å–ø—Ä–∞–≤–∏–ª–∞—Å—å‚Ä¶ –ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥ ‚Äî –∏ –º—ã –∑–∞–∫–æ–Ω—á–∏–º —ç—Ç–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ.\n\n"
                               "–ó–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ:\n"
                               )
        photo = FSInputFile("integral.png")  # –ø—É—Ç—å –∫ –∫–∞—Ä—Ç–∏–Ω–∫–µ
        await message.answer_photo(photo, caption = "–°–∏–¥–∏ —Ä–µ—à–∞–π, –º–æ–∂–µ—Ç, —Ö–æ—Ç—å —á–µ–º—É-—Ç–æ –Ω–∞—É—á–∏—à—å—Å—è. –û—Ç–≤–µ—Ç–æ–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å "
                                                   "—á–∏—Å–ª–æ.\n")
        await state.set_state(Quest.task5)
    else:
        await send_with_typing(message, bullshit[randint(0, len(bullshit) - 1)])


# ---- TASK 5 ----
@router.message(Quest.task5)
async def task5(message: Message, state: FSMContext):
    if message.text.strip() == "flag<314>":
        # await send_with_typing(
        #     "314‚Ä¶ –í–µ—Ä–Ω–æ.\n–ù–µ—É–∂–µ–ª–∏ —Ç—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—à–ª–∞ –≤—Å—ë?\n"
        #     "–ß—Ç–æ –∂. –í–æ–∑–º–æ–∂–Ω–æ, –≤ —ç—Ç–æ—Ç —Ä–∞–∑ —è –ø–æ–∑–≤–æ–ª—é —Å–µ–±–µ —Å–∫–∞–∑–∞—Ç—å‚Ä¶\n\n"
        #     "üéâ –° –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è! üéâ\n\n"
        #     "–ü—É—Å—Ç—å —ç—Ç–æ—Ç –º–∏—Ä, –∫–∞–∫–∏–º –±—ã –∂–∞–ª–∫–∏–º –æ–Ω –Ω–∏ –±—ã–ª, —Ö–æ—Ç—è –±—ã —Å–µ–≥–æ–¥–Ω—è –ø–æ–¥–∞—Ä–∏—Ç —Ç–µ–±–µ –Ω–µ–º–Ω–æ–≥–æ —Ä–∞–¥–æ—Å—Ç–∏.\n"
        #     "‚Ä¶–ù–µ –æ–±–æ–ª—å—â–∞–π—Å—è. –í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –≤—Å—ë –±—É–¥–µ—Ç —Å–ª–æ–∂–Ω–µ–µ."
        # )
        video_note = FSInputFile("vv.mp4")
        await message.answer_video_note(video_note, length=640) 
        voice = FSInputFile("scaramouche-voicemessage.ogg")
        await message.answer_voice(voice)
        # await state.set_state(Quest.finish)
    else:
        await send_with_typing(message,
                               "–•–∞! –î–∞–∂–µ —Å –º–∞—Ç–µ–º–∞—Ç–∏–∫–æ–π —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è –Ω–µ –º–æ–∂–µ—à—å?" + bullshit[randint(0, len(bullshit) - 1)])


# ---- FINISH ----
# @router.message(Quest.finish)
# async def finish(message: Message):
#     voice = FSInputFile("scaramouche-voicemessage.ogg")
#     await message.answer_voice(voice)
