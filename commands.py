from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import CommandStart
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from random import randint

router = Router()

bulshit = ["–æ–π –∫–∞–∫–∞—è —Ç—ã –≥–ª—É–ø–∞—è", "—Ç—ã –≤–æ–æ–±—â–µ —É–º–µ–µ—à—å –≥–æ–ª–æ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è", "—Ç—ã —É–≤–µ—Ä–µ–Ω–Ω–∞ —á—Ç–æ —Ç–µ–±–µ –≤–æ–æ–±—â–µ —ç—Ç–æ –Ω–∞–¥–æ?", "–≠—Ç–æ –¥–∞–∂–µ –∂–∞–ª–∫–æ.", "–¥–∞ —É –º–µ–Ω—è –±–∞–±—É–ª—è –ª—É—á—à–µ —Ä–µ—à–∞–µ—Ç —á–µ–º —Ç—ã", "–ó–Ω–∞–π —Å–≤–æ–µ –º–µ—Å—Ç–æ.", "–ü—Ä–æ—Å—Ç–æ –≤—Å—Ç–∞–Ω—å —É–∂–µ –Ω–∞ –∫–∞–ª–µ–Ω–∏ –∏ —Å–¥–∞–π—Å—è. "]


# ---- –°–æ—Å—Ç–æ—è–Ω–∏—è ----
class Quest(StatesGroup):
    taskE = State()
    task0 = State()
    task1 = State()
    task2 = State()
    task3 = State()
    task4 = State()
    task5 = State()
    finish = State()


@router.message(CommandStart())
async def cmd_start(message: Message, state=FSMContext):
    await message.answer("""‚Ä¶–ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ.  
–¢—ã –¥–æ–≥–∞–¥–∞–ª–∞—Å—å –æ—Ç–∫—Ä—ã—Ç—å —ç—Ç—É –∂–∞–ª–∫—É—é –∫–æ—Ä–æ–±–∫—É –∏ –ø—Ä–∏—à–ª–∞ —Å—é–¥–∞.  
–ù–µ—É–∂–µ–ª–∏ —Ç—ã –¥—É–º–∞–ª–∞, —á—Ç–æ —Ç–≤–æ–π –ø—Ä–∞–∑–¥–Ω–∏–∫ –ø—Ä–æ–π–¥—ë—Ç —Å–ø–æ–∫–æ–π–Ω–æ?  
–Ø –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –∏—Å–ø—ã—Ç–∞–Ω–∏—è ‚Äî –∏ –µ—Å–ª–∏ —Å–º–æ–∂–µ—à—å –ø—Ä–æ–π—Ç–∏ –∏—Ö, —Ç–æ–≥–¥–∞, –º–æ–∂–µ—Ç –±—ã—Ç—å‚Ä¶ —è –ø—Ä–∏–∑–Ω–∞—é —Ç–≤–æ—é —Å–æ–æ–±—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å.  

–ù–æ —Å–Ω–∞—á–∞–ª–∞ ‚Äî –¥–æ–∫–∞–∂–∏, —á—Ç–æ —Ç—ã –∑–Ω–∞–µ—à—å, –∫—Ç–æ —è.  
                         
example: flag<task0_flag>
                         
–ú–æ–∂–Ω–æ —É–∂–µ —Ö–æ—Ç—å —á—Ç–æ —Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å ‚òùÔ∏èüòí """)
    await state.set_state(Quest.taskE)




@router.message(F.text.in_(["–∂–æ–ø–∞", "–ñ–æ–ø–∞", "–ñ–û–ü–ê"]))
async def jopa(message: Message):
    text = "–ñ–û" + "O" * randint(0, 5) + "–ü" + "A" * randint(1, 10)
    await message.answer(text)

# ---- TASK E ----
@router.message(Quest.taskE) 
async def taskE(message: Message, state: FSMContext): 
    text = """–Ø ‚Äî –∫—É–∫–ª–∞, –ª–∏—à—ë–Ω–Ω–∞—è —Å–µ—Ä–¥—Ü–∞, 
    –Ω–æ —Å—Ç—Ä–µ–º—è—â–∞—è—Å—è —Å—Ç–∞—Ç—å –±–æ–≥–æ–º. 
    –ú–æ—ë –ø—Ä–æ—à–ª–æ–µ –±—ã–ª–æ —Å—Ç—ë—Ä—Ç–æ –∏–∑ –º–∏—Ä–æ–≤–æ–≥–æ –¥—Ä–µ–≤–∞, –Ω–æ –æ—Å—Ç–∞–ª–æ—Å—å –≤ –Ω—É–ª—è—Ö –∏ –µ–¥–∏–Ω–∏—Ü–∞—Ö. 
    01010011 01001011 01010010 01001101 01000011 01001000 –†–∞—Å—à–∏—Ñ—Ä—É–π –º–æ–µ –∏–º—è, 
    —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–ª—é—á."""
    if message.text.strip().lower() == "flag<task0_flag>":
        await message.answer(text)
        await state.set_state(Quest.task0)
    else:
        await message.answer(bulshit[randint(0, len(bulshit)-1)])



# ---- TASK 0 ----
@router.message(Quest.task0)
async def task0(message: Message, state: FSMContext):
    if message.text.strip().lower() == "flag<scaramouche>":
        await message.answer(
            "–•–º. –¢–∞–∫ —Ç—ã –≤—Å—ë –∂–µ –¥–æ–≥–∞–¥–∞–ª–∞—Å—å‚Ä¶ –¢—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—Å–µ–∫—Ä–µ—Ç–∏–ª–∞ –º–µ–Ω—è. –ò —ç—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ.\n"
            "–ü–µ—Ä–≤–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ:\n"
            "–Ø –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–ª –ø–æ—Å–ª–∞–Ω–∏–µ —à–∏—Ñ—Ä–æ–º –í–∏–∂–µ–Ω–µ—Ä–∞. –ö–ª—é—á ‚Äî –º–æ—ë –∏–º—è.\n"
            "–í–≤–µ–¥–∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É."
        )
        await state.set_state(Quest.task1)
    else:
        await message.answer("–≠—Ç–æ –¥–∞–∂–µ –∂–∞–ª–∫–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")


# ---- TASK 1 ----
@router.message(Quest.task1)
async def task1(message: Message, state: FSMContext):
    # –æ–∂–∏–¥–∞–µ–º—ã–π –æ—Ç–≤–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä ¬´HAPPYBIRTHDAY¬ª)
    if message.text.strip().lower() == "flag<happybirthday>":
        await message.answer(
            "–í–∏–∂—É, —á—Ç–æ –±–∞–∑–æ–≤—ã–µ —à–∏—Ñ—Ä—ã –¥–ª—è —Ç–µ–±—è –Ω–µ –ø—Ä–æ–±–ª–µ–º–∞. –ù–æ –Ω–µ –æ–±–æ–ª—å—â–∞–π—Å—è.\n\n"
            "–í—Ç–æ—Ä–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ:\n"
            "–Ø —Å—ã–≥—Ä–∞–ª –º–µ–ª–æ–¥–∏—é –Ω–∞ –Ω–µ–±–µ—Å–Ω–æ–π –∞—Ä—Ñ–µ. –ö–∞–∂–¥–∞—è –Ω–æ—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±—É–∫–≤–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ.\n"
            "–°–æ–±–µ—Ä–∏ –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤ –∏ –ø–æ–ª—É—á–∏ —Å–ª–æ–≤–æ. –í–≤–µ–¥–∏ –µ–≥–æ."
        )
        await state.set_state(Quest.task2)
    else:
        await message.answer("–ù–µ–≤–µ—Ä–Ω–æ. –¢—ã —É–≤–µ—Ä–µ–Ω–∞, —á—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–Ω—è–ª–∞ –∫–ª—é—á?")


# ---- TASK 2 ----
@router.message(Quest.task2)
async def task2(message: Message, state: FSMContext):
    if message.text.strip().lower() == "flag<vision>":
        await message.answer(
            "–¢–∞–∫-—Ç–∞–∫‚Ä¶ —É —Ç–µ–±—è –ø–æ–ª—É—á–∞–µ—Ç—Å—è –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º —è –æ–∂–∏–¥–∞–ª.\n\n"
            "–¢—Ä–µ—Ç—å–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ:\n"
            "–ü–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ —Å–∏–ª—É—ç—Ç –∏ –Ω–∞–∑–æ–≤–∏ –≥–µ—Ä–æ—è. –ò–∑ –∏–º–µ–Ω–∏ –≤–æ–∑—å–º–∏ –ø–µ—Ä–≤—É—é –±—É–∫–≤—É ‚Äî —ç—Ç–æ –∏ –±—É–¥–µ—Ç –æ—Ç–≤–µ—Ç."
        )
        await state.set_state(Quest.task3)
    else:
        await message.answer(bulshit[randint(0, len(bulshit)-1)])


# ---- TASK 3 ----
@router.message(Quest.task3)
async def task3(message: Message, state: FSMContext):
    if message.text.strip().lower() == "flag<k>":
        await message.answer(
            "–í–µ—Ä–Ω–æ. –¢—ã –Ω–∞—á–∏–Ω–∞–µ—à—å —É–∑–Ω–∞–≤–∞—Ç—å –¢–µ–π–≤–∞—Ç –Ω–µ —Ö—É–∂–µ –º–µ–Ω—è.\n\n"
            "–ß–µ—Ç–≤—ë—Ä—Ç–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ:\n"
            "–û—Ç—Å–∫–∞–Ω–∏—Ä—É–π QR-–∫–æ–¥. –ù–∞–π–¥–∏ —Å–ª–æ–≤–æ –∏ –≤–≤–µ–¥–∏ –µ–≥–æ –∑–¥–µ—Å—å."
        )
        await state.set_state(Quest.task4)
    else:
        await message.answer("–•–∞. –†–∞–∑—É–π –≥–ª–∞–∑–∞." + bulshit[randint(0, len(bulshit)-1)])


# ---- TASK 4 ----
@router.message(Quest.task4)
async def task4(message: Message, state: FSMContext):
    if message.text.strip().lower() == "flag<world>":
        await message.answer(
            "–¢—ã –∏ –∑–¥–µ—Å—å —Å–ø—Ä–∞–≤–∏–ª–∞—Å—å‚Ä¶ –ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥ ‚Äî –∏ –º—ã –∑–∞–∫–æ–Ω—á–∏–º —ç—Ç–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ.\n\n"
            "–ó–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ:\n"
            "–†–µ—à–∏ –∏–Ω—Ç–µ–≥—Ä–∞–ª. –û—Ç–≤–µ—Ç–æ–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ.\n"
            "–ü–æ–¥—Å–∫–∞–∑–∫–∞: —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω –¥–∞—Ç—å 314."
        )
        await state.set_state(Quest.task5)
    else:
        await message.answer(bulshit[randint(0, len(bulshit)-1)])


# ---- TASK 5 ----
@router.message(Quest.task5)
async def task5(message: Message, state: FSMContext):
    if message.text.strip() == "flag<314>":
        await message.answer(
            "314‚Ä¶ –í–µ—Ä–Ω–æ.\n–ù–µ—É–∂–µ–ª–∏ —Ç—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—à–ª–∞ –≤—Å—ë?\n"
            "–ß—Ç–æ –∂. –í–æ–∑–º–æ–∂–Ω–æ, –≤ —ç—Ç–æ—Ç —Ä–∞–∑ —è –ø–æ–∑–≤–æ–ª—é —Å–µ–±–µ —Å–∫–∞–∑–∞—Ç—å‚Ä¶\n\n"
            "üéâ –° –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è! üéâ\n\n"
            "–ü—É—Å—Ç—å —ç—Ç–æ—Ç –º–∏—Ä, –∫–∞–∫–∏–º –±—ã –∂–∞–ª–∫–∏–º –æ–Ω –Ω–∏ –±—ã–ª, —Ö–æ—Ç—è –±—ã —Å–µ–≥–æ–¥–Ω—è –ø–æ–¥–∞—Ä–∏—Ç —Ç–µ–±–µ –Ω–µ–º–Ω–æ–≥–æ —Ä–∞–¥–æ—Å—Ç–∏.\n"
            "‚Ä¶–ù–µ –æ–±–æ–ª—å—â–∞–π—Å—è. –í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –≤—Å—ë –±—É–¥–µ—Ç —Å–ª–æ–∂–Ω–µ–µ."
        )
        await state.set_state(Quest.finish)
    else:
        await message.answer("–•–∞! –î–∞–∂–µ —Å –º–∞—Ç–µ–º–∞—Ç–∏–∫–æ–π —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è –Ω–µ –º–æ–∂–µ—à—å?" + bulshit[randint(0, len(bulshit)-1)])


# ---- FINISH ----
@router.message(Quest.finish)
async def finish(message: Message):
    await message.answer("–ò—Å–ø—ã—Ç–∞–Ω–∏—è –∑–∞–∫–æ–Ω—á–µ–Ω—ã. –ù–∞—Å–ª–∞–∂–¥–∞–π—Å—è –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º‚Ä¶ –ø–æ–∫–∞ –º–æ–∂–µ—à—å.")

